name: build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  check-branch:
    runs-on: ubuntu-latest

    timeout-minutes: 2
    concurrency:
      group: ci-check-branch-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4
        if: ${{ github.event_name == 'pull_request' }}
        with:
          fetch-depth: 0

      - name: Check if the PR's branch is updated
        if: ${{ github.event_name == 'pull_request' }}
        uses: osl-incubator/gh-check-pr-is-updated@1.0.0
        with:
          remote_branch: origin/main
          pr_sha: ${{ github.event.pull_request.head.sha }}

  tests:
    strategy:
      fail-fast: false
      matrix:
        python_version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        os:
          - "ubuntu"
          - "macos"
          - "windows"

    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 20

    defaults:
      run:
        shell: bash -l {0}

    concurrency:
      group: ci-tests-${{ matrix.os }}-${{ matrix.python_version }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - name: prepare conda env file for windows
        if: ${{ matrix.os == 'windows' }}
        run: cp conda/dev-win.yaml conda/dev.yaml

      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          environment-file: conda/dev.yaml
          channels: conda-forge,nodefaults
          activate-environment: makim
          auto-update-conda: true
          conda-solver: libmamba
          python-version: "${{ matrix.python_version }}"

      - name: Check Poetry lock
        run: poetry check

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install

      - name: Run smoke tests using simple makim file
        run: makim smoke-tests.simple

      - name: Run smoke tests using complex makim file
        run: makim smoke-tests.complex

      - name: Run smoke tests using makim and containers-sugar
        if: ${{ matrix.os == 'ubuntu' }}
        run: |
          pip install "containers-sugar>=1.16.1"
          makim smoke-tests.containers

      - name: Run smoke tests using different interpreters
        run: makim smoke-tests.shell-app

      - name: Run smoke tests using unittest makim file
        run: makim smoke-tests.unittest

      - name: Run smoke test using bash
        run: makim smoke-tests.bash

      - name: Run smoke test for variable envs
        run: makim smoke-tests.vars-env

      - name: Run smoke test for variables
        run: makim smoke-tests.test-vars

      - name: Run smoke test for dir-absolute-path
        run: makim smoke-tests.dir-absolute-path

      - name: Run smoke test for dir-no-path
        run: makim smoke-tests.dir-no-path

      - name: Run smoke test for dir-relative-path
        run: makim smoke-tests.dir-relative-path

      - name: Run unit tests
        run: makim tests.unittest

      - name: Run smoke test for interactive args
        run: makim smoke-tests.interactive-args

      - name: Run smoke test for hooks (pre and post)
        run: makim smoke-tests.run-hooks

      - name: Run smoke test for matrix combinations
        run: makim smoke-tests.matrix

      - name: Run smoke test for shell app
        run: makim smoke-tests.shell-app

      - name: Run smoke test for ssh remote execution
        if: ${{ matrix.os == 'linux' }}
        run: makim smoke-tests.ssh-remote-execution

      - name: Run smoke test for scheduler
        run: makim smoke-tests.scheduler

      - name: Run smoke test for task logger
        run: makim smoke-tests.task-logger

      - name: Run smoke test for task retry
        run: makim smoke-tests.retry

      - name: Run smoke test for validating task conditionals
        run: makim smoke-tests.validate-conditionals

      - name: Run smoke test for testing failure hook
        run: makim smoke-tests.failure-hook

      - name: Run smoke test for testing ignore errors option
        run: makim smoke-tests.ignore-error-option

      - name: Semantic Release PR Title Check
        uses: osl-incubator/semantic-release-pr-title-check@v1.4.1
        if: success() || failure()
        with:
          convention-name: conventionalcommits

      - name: Setup tmate session
        if: "${{ failure() && (contains(github.event.pull_request.labels.*.name, 'ci:enable-debugging')) }}"
        uses: mxschmitt/action-tmate@v3

  linter:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    defaults:
      run:
        shell: bash -l {0}

    concurrency:
      group: ci-linter-docs-${{ matrix.os }}-${{ matrix.python_version }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          environment-file: conda/dev.yaml
          channels: conda-forge,nodefaults
          activate-environment: makim
          auto-update-conda: true
          conda-solver: libmamba
          python-version: "3.9"

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install

      - name: Run style checks
        if: success() || failure()
        run: |
          pre-commit install
          makim tests.linter

      - name: Setup tmate session
        if: "${{ failure() && (contains(github.event.pull_request.labels.*.name, 'ci:enable-debugging')) }}"
        uses: mxschmitt/action-tmate@v3
